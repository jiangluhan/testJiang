import java.util.Random;

public class randomTest {


    public static void main(String[] args) {
//        getRandomStr(20000);//n为随机字符串的长度

//        String str = "";
//        System.out.println(str.length());
//        StringBuilder shfCodes = new StringBuilder();
//        System.out.println(shfCodes.toString());
//         根据appId查询溯源标识
//        List<String> shfCodeList = new ArrayList<>();
//        shfCodeList.add("20100002-05bc-9129-c836d29c585295db");
//        shfCodeList.add("20100002-0a9f-1476-21aa50e69dc8b050");
//        shfCodeList.add("20100002-2930-6168-bb42654e6f9bfe72");
//        int n = 0;
//        StringBuilder shfCodes = new StringBuilder();
//        for (String shfCode : shfCodeList) {
//            if (n < shfCodeList.size() - 1) {
//                shfCodes.append(shfCode).append(",");
//            } else {
//                shfCodes.append(shfCode);
//            }
//            n++;
//        }
//        System.out.println(shfCodes.toString());
//        System.out.println(shfCodes.substring(0,1));

        GwForensicReqBo reqBo = new GwForensicReqBo();
        reqBo.setScreenTime("");
        reqBo.setUuid("12010004-99aa-4680-bf8a90428a058571");
        if((reqBo.getUuid().charAt(0) == '0' || reqBo.getUuid().charAt(0) == '1') && 1==1) {
            // 查询级联的溯源标识
//            log.info("查询级联的溯源标识");
//            cascadeTraceabilityAndSave(gwForensicTaskInfoPo, gwForensicResultBo, info);
            System.out.println("查询级联的溯源标识");
        }

    }

    /*
     java 生成指定长度随机字符串
    */
    public static void getRandomStr(int n){
        String str = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
        Random r = new Random();//创建random对象
        StringBuffer buff = new StringBuffer();//StringBuffer
        for (int i = 0; i < n; i++) {
            int it = r.nextInt(62);//使用random生成[0,62)之间的随机数,不包括62
            buff.append(str.charAt(it));// 把int下标 转为 str中随机字符(数字，大写字母或者小写字母)
        }
        System.out.println(buff.toString());
    }
}


